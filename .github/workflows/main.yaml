name: Build and Push to ECR
on:
  push:
    branches: [ "main" ]

jobs:
  Build-and-Push-to-ECR:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}


        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1


        - name: Build and push backend to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{secrets.ECR_BACKEND_REPO}}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./api
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

        - name: Build and push frontend to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{secrets.ECR_FRONTEND_REPO}}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./frontend
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

        - name: Update kube config
          run: aws eks update-kubeconfig --name coding-with-callie --region ${{secrets.AWS_REGION}}

        - name: Deploy to EKS
          run: |
            kubectl apply -f ./k8_manifest_files/backend/database-migrate-job.yaml
            kubectl apply -f ./k8_manifest_files/backend/deployment.yaml
            kubectl apply -f ./k8_manifest_files/backend/service.yaml
            kubectl apply -f ./k8_manifest_files/frontend/deployment.yaml
            kubectl apply -f ./k8_manifest_files/frontend/service.yaml
            kubectl apply -f ./k8_manifest_files/ingress.yaml